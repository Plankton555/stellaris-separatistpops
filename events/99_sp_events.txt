namespace = seppop

##### Political opponents

### Triggering Event
country_event = {
	id = seppop.1
	hide_window = yes

	# fire_only_once = yes

	trigger = {
		# TODO should probably call this from yearly pulse or something
		NOT = { has_country_flag = recent_political_event }
		# always = no
		# num_owned_planets > 5
		any_pop_faction = {
			faction_approval < 0.3
		}
	}

	immediate = {
		set_timed_country_flag = {
			flag = recent_political_event
			days = 40
		}
		log_error = "huh"

		#random_owned_planet = {
		#	limit = {
		#		is_capital = no
		#	}
		#	set_planet_flag = has_fox_nest
		#	save_event_target_as = fox_nest_planet
		#}

		random_pop_faction = {
			limit = { faction_approval < 0.3 }

			# weights = { (optional â€“ adds weights to affect the chance a specific object is selected)
			#	base = float
			#	modifier = { <add/factor = float> <triggers> }
			#}
			#<effects>

			save_event_target_as = disapproving_faction
			pop_faction_event = { id = seppop.2 days = 5 }
		}

		# country_event = { id = seppop.3 days = 5 }

		random_owned_leader = {
			limit = { leader_of_faction = event_target:disapproving_faction }
			leader_event = { id = seppop.3 days = 5 }
		}
	}
}

### What

pop_faction_event = {
	id = seppop.2
	title = "seppop.2.name"
	desc = "seppop.2.desc"
	picture = GFX_evt_warm_barren
	show_sound = event_alien_nature

	is_triggered_only = yes

	immediate = {
	}
	option = {
		name = seppop.2.a
		ai_chance = {
			factor = 0
		}
	}
	option = {
		name = seppop.2.b
		ai_chance = {
			factor = 1
		}
		# add_modifier = { modifier = "turned_away_cuddles" days = 365 }
	}
}

leader_event = {
	id = seppop.3
	title = "seppop.3.name"
	desc = "seppop.3.desc"
	picture = GFX_evt_warm_barren
	show_sound = event_alien_nature

	is_triggered_only = yes

	immediate = {
	}
	option = {
		name = seppop.3.a
		ai_chance = {
			factor = 0
		}
	}
	option = {
		name = seppop.3.b
		ai_chance = {
			factor = 1
		}
		# add_modifier = { modifier = "turned_away_cuddles" days = 365 }
	}
}

# Potentially useful things

# has_faction 	Checks if the country has any instance of target faction type (scope: country)
# Example: has_faction = isolationist

# support 	Checks the faction's support level (scope: pop_faction)
# Example: support > 0.5
